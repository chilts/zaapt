%# ----------------------------------------------------------------------------
<%doc>

    In here, you might want to re-read the database for updated information
    and refresh your session hash/object/whatever, with the fields you need.

    For example, using the in-built account fields, you might want to do
    something like the following:

    +++ code +++

    my $model = $zaapt->get_model('Account');
    my $account = $model->sel_account({ a_id => $id });

    $sess->{firstname} = $account->{a_firstname};
    $sess->{lastname} = $account->{a_lastname};
    $sess->{email} = $account->{a_email};
    $sess->{notify} = $account->{a_notify};

    --- code ---

    And you may want to either 'die' or handle it in a different way if you
    can't find the $id specified.

</%doc>
%# ----------------------------------------------------------------------------
<%args>
    $zaapt
    $id
    $sess
</%args>
%# ----------------------------------------------------------------------------
<%init>
    my $model = $zaapt->get_model('Account');
    my $account = $model->sel_account({ a_id => $id });

    return unless defined $account;

    # refresh all these fields
    foreach ( qw( id username firstname lastname email admin logins last ) ) {
        $sess->{$_} = $account->{"a_$_"};
    }

    # get the permissions for this user sel_permission_all_for_account
    my $permissions = $model->sel_permission_all_for_account({ a_id => $account->{a_id} });
    $sess->{perms} = {};
    foreach my $permission ( @$permissions ) {
        $sess->{perms}{$permission->{p_id}} = $permission->{p_name};
        if ( $permission->{p_name} eq 'super' ) {
            $sess->{perms}{super} = $permission->{p_id};
        }
    }

    die "this component should be overriden";
    return;
</%init>
%# ----------------------------------------------------------------------------
