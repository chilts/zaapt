%# ----------------------------------------------------------------------------
<%args>
    $zaapt
    $_act        => ''
    $a_username  => ''
    $a_password  => ''
    $a_repeat    => ''
    $a_email     => ''
    $a_notify    => 1
    $a_firstname => ''
    $a_lastname  => ''

    $domain
    $path        => undef
</%args>
%# ----------------------------------------------------------------------------
<%once>
    use String::Random qw(random_string);
</%once>
%# ----------------------------------------------------------------------------
<%init>
    my $err = [];

    # someone is trying to sign up
    if ( $_act ne '' ) {
        # turn notify into a boolean
        $a_notify = ( $a_notify eq '1' ? 1 : 0 );

        # check that the username consists only of lowercase letters, numbers and the dash
        unless ( $a_username =~ m{ \A [a-z0-9][a-z0-9\-]+[a-z0-9] \z }xms ) {
            push @$err, "Username must consist only of lowercase letters, numbers or the dash (-) and be at least 3 characters long.";
        }

        my $empty = 0;
        foreach ( $a_username, $a_password, $a_email, $a_firstname, $a_lastname ) {
            $empty++ unless m{ \S }xms;
        }
        push @$err, "At least one field is blank, please enter all fields" if $empty;

        unless ( $a_password eq $a_repeat ) {
            push @$err, "Password and the repeat are not the same, please re-type";
        }

        unless ( length $a_password >= 6 ) {
            push @$err, "Password must be at least 6 characters long.";
        }

        unless ( @$err ) {
            # TODO: a shedload of this stuff can be pushed down into the Account.pm module

            # get a random_string for the salt
            my $a_salt = random_string('s' x 8);
            my $c_code = random_string('0' x 32, [ 'A'..'Z', 'a'..'z', '0'..'9' ]);

            # insert this new user into the database
            my $model = $zaapt->get_model('Account');
            eval {
                $model->ins_account({
                    a_username  => $a_username,
                    a_firstname => $a_firstname,
                    a_lastname  => $a_lastname,
                    a_email     => $a_email,
                    a_notify    => $a_notify,
                    a_salt      => $a_salt,
                    a_password  => $a_password,
                });
            };
            if ( $@ ) {
                if ( $DBI::errstr =~ m{duplicate key violates unique constraint "account_username_key"}ms ) {
                    push @$err, 'This username is already taken, please provide another one.';
                }
                else {
                    die $@;
                }
            }
            else {
                # get that account back out again
                my $account = $model->sel_account_using_username({ a_username => $a_username });

                # insert the code into the confirm table
                $model->ins_confirm({ a_id => $account->{a_id}, c_code => $c_code });

                # and create a profile for them
                my $profile = $zaapt->get_model("KiwiWriters::Zaapt::Store::Pg::Profile");
                $profile->ins_profile_skeleton({ a_id => $account->{a_id} });

                my $email = $m->comp(
                    'sign-up-email.mas',
                    domain     => $domain,
                    path       => $path,
                    a_email    => $a_email,
                    a_username => $a_username,
                    c_code     => $c_code,
                );

                # add this email to the outgoing queue (or immediately if configured)
                if ( $m->comp('/zaapt/model/email/send.mas', email => $email) ) {
                    $m->clear_buffer();
                    $m->redirect('confirm.html');
                    return;
                }
                else {
                    push @$err, 'There was an error sending you a confirmation email.';
                    push @$err, 'Please email <admin at kiwiwriters dot org> stating your username and email. We can then confirm your account for you. Thanks.';
                }
            }
        }
    }
</%init>
%# ----------------------------------------------------------------------------
<& view-sign-up.render.mhtml,
    a_username  => $a_username,
    a_firstname => $a_firstname,
    a_lastname  => $a_lastname,
    a_email     => $a_email,
    a_notify    => $a_notify,
    err         => $err,
&>
%# ----------------------------------------------------------------------------
