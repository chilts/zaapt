%# ----------------------------------------------------------------------------
<%args>
    $zaapt
    $perms
    $_act      => 'add'
    $c_id      => undef
    $p_id      => undef
    $p_name    => ''
    $p_content => ''
    $t_id      => undef
</%args>
%# ----------------------------------------------------------------------------
<%once>
    use Zaapt::Utils::Valid;
    use Zaapt::Utils::Conv;
    use URI::Escape;

    my $title = {
        add => 'Add',
        ins => 'Add',
        edit => 'Edit',
        upd  => 'Edit',
        del  => 'Delete',
    };
</%once>
%# ----------------------------------------------------------------------------
<%init>
    my $model = $zaapt->get_model('Content');

    my ($content, $page);

    # some data manipulation
    $p_content   = Zaapt::Utils::Conv::remove_cr( $p_content );

    # see if we are working with a Content or a pre-existing Page
    if ( $_act eq 'ins' or $_act eq 'add' ) {
        $content = $model->sel_content({ c_id => $c_id });

        $m->redirect('edit-c-list.html')
            unless defined $content;

        $m->redirect('edit-c-list.html?c_id=' . uri_escape($c_id))
            unless exists $perms->{$content->{_edit}};
    }
    else {
        $page = $model->sel_page({ p_id => $p_id });

        $m->redirect('edit-c-list.html')
            unless defined $page;

        $m->redirect('edit-p-list.html?c_id=' . uri_escape($page->{c_id}))
            unless exists $perms->{$page->{_edit}};

        $c_id = $page->{c_id};
    }

    my $err = [];
    my $values = {};

    # let's do some of the actions
    if ( $_act eq 'add' ) {
        $values->{_act} = 'ins';
        $values->{submit} = 'Add Page';
    }
    elsif ( $_act eq 'ins' ) {
        # check that these values are valid
        unless ( Zaapt::Utils::Valid::is_valid_name($p_name) ) {
            push @$err, Zaapt::Utils::Valid::err();
        }
        unless ( Zaapt::Utils::Valid::has_content($p_content, 'Content') ) {
            push @$err, Zaapt::Utils::Valid::err();
        }

        # no page with this name should already exist
        if ( $model->sel_page_using_name({ c_id => $c_id, p_name => $p_name }) ) {
            push @$err, "Page with name '$p_name' already exists."
        }

        # check this type exists
        unless ( $zaapt->get_model('Common')->sel_type({ t_id => $t_id }) ) {
            push @$err, 'invalid type';
        }

        # do the insert
        unless ( @$err ) {
            $model->ins_page({
                c_id      => $c_id,
                p_name    => $p_name,
                p_content => $p_content,
                t_id      => $t_id,
            });
            $m->redirect("edit-p-list.html?c_id=" . uri_escape( $c_id ));
            return;
        }

        $values = { %ARGS };
        $values->{submit} = 'Add Page';
    }
    elsif ( $_act eq 'edit' ) {
        # already checked permissions
        $values = $page;
        $values->{_act} = 'upd';
        $values->{submit} = 'Save Page';
    }
    elsif ( $_act eq 'upd' ) {
        # check that these values are valid
        unless ( Zaapt::Utils::Valid::is_valid_name($p_name) ) {
            push @$err, Zaapt::Utils::Valid::err();
        }
        unless ( Zaapt::Utils::Valid::has_content($p_content, 'Content') ) {
            push @$err, Zaapt::Utils::Valid::err();
        }

        # no page with this name should already exist (but only if it isn't this one)
        my $check_page;
        if ( $check_page = $model->sel_page_using_name({ c_id => $c_id, p_name => $p_name })
             and $check_page->{p_id} != $page->{p_id} ) {
            push @$err, "Page with name '$p_name' already exists."
        }

        # check this type exists
        unless ( $zaapt->get_model('Common')->sel_type({ t_id => $t_id }) ) {
            push @$err, 'invalid type';
        }

        # do the update
        unless ( @$err ) {
            $model->upd_page({
                c_id      => $c_id,
                p_name    => $p_name,
                p_content => $p_content,
                t_id      => $t_id,
                p_id      => $p_id,
            });
            $m->redirect("edit-p-list.html?c_id=" . uri_escape( $c_id ));
            return;
        }

        $values = { %ARGS };
        $values->{submit} = 'Save Page';
    }
    elsif ( $_act eq 'rem' ) {
        # already checked permissions
        $values = $page;
        $values->{_act} = 'del';
        $values->{submit} = 'Delete Page';
    }
    elsif ( $_act eq 'del' ) {
        # delete
        $model->del_page({ p_id => $p_id });
        $m->redirect("edit-p-list.html?c_id=" . uri_escape( $c_id ));
        return;
    }

    my $options = $m->comp('/zaapt/common/options-type.mas', zaapt => $zaapt);
</%init>
%# ----------------------------------------------------------------------------
<h1><% $title->{$_act} | n %> a Page</h1>

<p><a href="edit-p-list.html?c_id=<% $c_id | u %>">&laquo; Back to Page List</a></p>

% if ( defined $page ) {
<h2>Page: <% $page->{p_name} | h %></h2>
% } else {
<h2>Page: ?</h2>
% }

<& /zaapt/common/err.mhtml, err => $err &>

<& /zaapt/common/form/edit.mhtml,
    action => '?',
    values => $values,
    elements => [
        { type => 'hidden', name => '_act' },
        { type => 'hidden', name => 'c_id', def => $c_id },
        { type => 'hidden', name => 'p_id', def => $p_id },
        { type => 'text', field => 'Name', name => 'p_name', size => 40, def => '' },
        { type => 'textarea', field => 'Content', name => 'p_content', rows => 10, cols => 40, def => '' },
        { type => 'select', field => 'Type', name => 't_id', options => $options, selected => $t_id },

        { type => 'submit', name => 'submit', field => 'Actions', cancel => 1, location => 'edit-p-list.html?c_id=' . uri_escape($c_id) },
    ]
&>
%# ----------------------------------------------------------------------------
