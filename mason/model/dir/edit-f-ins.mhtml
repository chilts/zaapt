%# ----------------------------------------------------------------------------
<%args>
    $zaapt
    $my_perms
    $d_id
    $f_name        => undef
    $f_title       => undef
    $f_description => undef
</%args>
%# ----------------------------------------------------------------------------
<%once>
    use URI::Escape;
    use Zaapt::Utils::Valid;
    use Zaapt::Utils::Conv;
    use File::Copy;
    use List::Util qw(max);
</%once>
%# ----------------------------------------------------------------------------
<%init>
    my $model = $zaapt->get_model('Dir');
    my $dir = $model->sel_dir({ d_id => $d_id });
    unless ( defined $dir ) {
        $m->redirect('edit-d-list.html');
        return;
    }

    # check the error conditions first - we need to recover

    # this section firstly needs to exist to be able to add a page
    $m->redirect('edit-d-list.html') unless defined $dir;
    $m->redirect('edit-d-list.html') unless exists $my_perms->{$dir->{_edit}};

    # now we're into the normal user errors

    my $err = [];

    if ( $f_name eq '' ) {
        push @$err, "Please specify a name";
    }

    unless ( @$err ) {
        unless ( Zaapt::Utils::Valid::is_valid_name($f_name) ) {
            push @$err, Zaapt::Utils::Valid::err();
        }
    }

    # some data manipulation
    $f_description = Zaapt::Utils::Conv::remove_cr( $f_description );

    # check that this name doesn't already exist in the database for this dir
    my $file_exists = $model->sel_file_in_dir({ d_id => $d_id, f_name => $f_name });
    if ( defined $file_exists ) {
        push @$err, "a file with this name already exists in this dir";
    }

    # check we actually have a file
    my $f_filename;

    my $upload = $r->upload();
    unless ( defined $upload ) {
        push @$err, "please specify a file to upload";
    }

    # now, let's get the file and save it somewhere
    unless ( @$err ) {
        # get the input filename
        $f_filename = $upload->filename();

        if ( $f_filename eq '' ) {
            push @$err, 'please specify a file to upload';
        }
    }

    unless ( @$err ) {
        # prep the incoming file
        my $upload_fh = $upload->fh();
        binmode $upload_fh;

        # create the output filename
        my ($f_ext) = $f_filename =~ m{ \. (\w+) \z }xms;
        $f_ext ||= '';
        my $filename = "$dir->{d_path}/$dir->{d_original}/$f_name" . ( $f_ext ? ".$f_ext" : '' );

        # copy the contents of the file
        copy( $upload_fh, $filename );

        close($upload_fh);

        $model->ins_file({
            d_id          => $d_id,
            f_name        => $f_name,
            f_ext         => $f_ext,
            f_title       => $f_title,
            f_description => $f_description,
            f_filename    => $f_filename,
        });

        $m->redirect('edit-f-list.html?d_id=' . uri_escape($d_id));
        return;
    }
</%init>
%# ----------------------------------------------------------------------------
<h1>Add a File</h1>

<p><a href="edit-d-list.html">&laquo; Back to Dir List</a></p>

<& edit-render-d-title.mhtml, dir => $dir &>

<& /zaapt/common/err.mhtml, err => $err &>

<& /zaapt/common/form.mhtml, action => 'edit-f-ins.html', enctype => 'multipart/form-data', elements => [
        { type => 'hidden', name => 'd_id', value => $d_id },
        { type => 'file', field => 'File', name => 'image' },
        { type => 'text', field => 'Name', name => 'f_name', size => 40, value => $f_name },
        { type => 'text', field => 'Title', name => 'f_title', size => 40, value => $f_title },
        { type => 'textarea', field => 'Description', name => 'f_description', rows => 10, cols => 40, value => $f_description },

        { type => 'submit', field => 'Actions', value => 'Add', cancel => 'edit-f-list.html?d_id=' . uri_escape($d_id) },
    ]
&>
%# ----------------------------------------------------------------------------
